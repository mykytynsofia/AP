openapi: 3.0.0
info:
  title: Booking API
  description: Service for reserving audience
  version: 1.7.1
servers:
  - url: http://api.booking.com/v1
    description: ''
paths:
  /booking:
    get:
      summary: Returns a list of schedule.
      description: Optional extended description in CommonMark or HTML.
      operationId: get
      parameters:
        - in: query
          name: date
          required: false
          schema:
            type: string
            format: date-time
            minimum: 1
        - in: query
          name: class
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/book'
        '400':
          description: there is not cllass
        '404':
          description: now that date
    post:
      summary: book class
      operationId: addbook
      parameters:
        - in: query
          name: class
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - in: query
          name: date
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - in: query
          name: hours
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 120
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/book'
        '400':
          description: there is no such class
        '409':
          description: already booked
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/book'
    put:
      summary: update
      operationId: update
      parameters:
        - in: query
          name: ID
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: class
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - in: query
          name: date
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - in: query
          name: hours
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 120
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/book'
        '400':
          description: there is no such ID
        '409':
          description: time or room is already busy
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/book'
    delete:
      summary: Deletes a book
      operationId: deletebook
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Success
        '400':
          description: Invalid ID supplied
        '404':
          description: class ID not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 0
        Firstname:
          type: string
          example: Arthur
        Lastname:
          type: string
          example: Dent
      required:
        - id
        - Firstname
        - Lastname
    book:
      type: object
      properties:
        id:
          type: integer
          format: int64
        classId:
          type: integer
          format: int64
        StartDateTime:
          type: string
          format: date-time
        ENDDateTime:
          type: string
          format: date-time
        booked:
          type: boolean
          default: false
      required:
        - id
        - classId
        - StartDateTime
        - ENDDateTime
      xml:
        name: book
    class:
      type: object
      properties:
        id:
          type: integer
          format: int64
        addres:
          type: string
        name:
          type: string
      xml:
        name: class
  securitySchemes:
    appId:
      type: apiKey
      in: header
      name: login
    apiKey:
      type: apiKey
      in: header
      name: password
security:
  - apiKey: []
    appId: []
